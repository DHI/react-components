import { hexColorToArray, latLngToUtm, utmToLatLng } from './helpers';
import {
  AisFeatureCollection,
  Feature,
  PointGeometry,
  VesselAttributeMapping,
  VesselColorPalette,
  VesselComponentView,
  VesselType,
  VesselView,
} from './types';

export const createVesselFeatureCollection = (
  featureCollection: AisFeatureCollection,
  vesselAttributeMapping: VesselAttributeMapping,
  colorPalette: VesselColorPalette,
): AisFeatureCollection => {
  const featureCollectionFeatures = featureCollection.features as Feature[];

  const features = featureCollectionFeatures
    .map((f: Feature) => {
      const shipType = shipTypeIdToName(f.properties[vesselAttributeMapping.shipType] as number);
      const heading = f.properties[vesselAttributeMapping.heading] as number;
      const width = f.properties[vesselAttributeMapping.width] as number;
      const length = f.properties[vesselAttributeMapping.length] as number;
      const draft = f.properties[vesselAttributeMapping.draft] as number | null;
      const toBow = f.properties[vesselAttributeMapping.toBow] as number | null;
      const toStern = f.properties[vesselAttributeMapping.toStern] as number | null;
      const toPort = f.properties[vesselAttributeMapping.toPort] as number | null;
      const toStarboard = f.properties[vesselAttributeMapping.toStarboard] as number | null;
      const hullOverride = vesselAttributeMapping.hullOverride
        ? (f.properties[vesselAttributeMapping.hullOverride] as number[][])
        : null;
      const showInnerVesselLayout = vesselAttributeMapping.showInnerVesselLayout ?? null;

      const geometry = f.geometry as PointGeometry;

      const geometry3D = getVesselPolygons(
        // '',
        shipType,
        colorPalette,
        1,
        geometry.coordinates[1],
        geometry.coordinates[0],
        heading,
        length,
        width,
        draft,
        toBow,
        toStern,
        toPort,
        toStarboard,
        hullOverride,
        showInnerVesselLayout,
      );

      // Add in original properties for tooltips.
      const updatedFeature = geometry3D.map((feature) => ({
        ...feature,
        properties: {
          ...feature.properties,
          ...f.properties,
        },
      }));

      return updatedFeature;
    })
    .flat();

  return {
    type: 'FeatureCollection',
    features,
  };
};

export const getVesselPolygons = (
  // ownerId: string,
  vesselTypeName: VesselType,
  color: VesselColorPalette,
  opacity = 1,
  latitude: number,
  longitude: number,
  heading: number,
  length: number,
  width: number,
  draft: number | null,
  toBow: number | null,
  toStern: number | null,
  toPort: number | null,
  toStarboard: number | null,
  hullOverride: number[][] | null,
  showInnerVesselLayout: boolean,
): Feature[] => {
  const layers: any[] = [];

  const vesselView = getVesselGeometry(vesselTypeName, color, hullOverride, showInnerVesselLayout);

  if (!width) {
    width = vesselView.defaultParams.width;
  }
  if (!length) {
    length = vesselView.defaultParams.length;
  }

  if (width && length) {
    if (!toStern && toBow) {
      toStern = length - toBow;
    } else if (toStern && !toBow) {
      toBow = length - toStern;
    } else if (!toStern && !toBow) {
      toBow = length / 2;
      toStern = toBow;
    }

    if (!toPort && toStarboard) {
      toPort = toStarboard - width;
    } else if (toPort && !toStarboard) {
      toStarboard = toPort - width;
    } else if (!toPort && !toStarboard) {
      toPort = width / 2;
      toStarboard = toPort;
    }
  }

  const utm = latLngToUtm(latitude, longitude);
  // const radians = (Math.PI / 180) * (-heading + utm.convergence! + 90);
  const radians = (Math.PI / 180) * (-heading + 90);
  const cos = Math.cos(radians);
  const sin = Math.sin(radians);

  vesselView.geometry.forEach((vesselGeometry: VesselComponentView) => {
    const coordinates: number[][] = vesselGeometry.coordinates.map((coordinate: number[]): number[] => {
      const x = (length * coordinate[0]) / 2 + (length / 2 - toStern!);
      const y = (width * coordinate[1]) / 2 - (width / 2 - toPort!);

      const newX = cos * x - sin * y + utm.easting;
      const newY = cos * y + sin * x + utm.northing;
      const newUtm = { ...utm };
      newUtm.easting = newX;
      newUtm.northing = newY;

      const { latitude, longitude } = utmToLatLng(
        newUtm.zone,
        newUtm.easting,
        newUtm.northing,
        newUtm.northernHemisphere,
      );
      return [longitude, latitude];
    });

    const fillColor = hexColorToArray(vesselGeometry.color, 1);
    const outlineColor = hexColorToArray(vesselGeometry.colorOutline, 1);

    const vesselScaleFactor = length / vesselView.defaultParams.length;
    const vesselDraft = draft > 0 ? draft : vesselView.defaultParams.draft * vesselScaleFactor;

    let elevation;
    if (vesselGeometry.isHull) {
      elevation = vesselView.defaultParams.hullHeight * vesselScaleFactor - vesselDraft;
    } else if (vesselGeometry.color === color.secondary) {
      elevation = vesselView.defaultParams.hullHeight * vesselScaleFactor * 1.2 - vesselDraft;
    } else if (vesselGeometry.color === color.tertiary) {
      elevation = vesselView.defaultParams.hullHeight * vesselScaleFactor * 1.4 - vesselDraft;
    } else if (vesselGeometry.color === color.primary) {
      elevation = vesselView.defaultParams.hullHeight * vesselScaleFactor * 1.3 - vesselDraft;
    } else {
      elevation = vesselView.defaultParams.hullHeight * vesselScaleFactor - vesselDraft;
    }

    layers.push({
      type: 'Feature',
      geometry: {
        type: 'MultiPolygon',
        coordinates: [[coordinates]],
      },
      properties: {
        style: {
          fillColor: fillColor,
          fillOpacity: 1,
          color: outlineColor,
          opacity: opacity,
          weight: 1,
          width: 1,
        },
        elevation: elevation,
      },
    });
  });

  return layers as any;
};

export const getVesselGeometry = (
  vesselType: VesselType,
  color: VesselColorPalette,
  hullOverride: number[][] | null,
  showInnerVesselLayout: boolean,
): VesselView => {
  const cruiserLiner = showInnerVesselLayout
    ? [
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.658, 0.0],
            [0.658, 0.182],
            [0.656, 0.39],
            [0.648, 0.518],
            [0.638, 0.646],
            [0.62, 0.788],
            [0.608, 0.888],
            [0.62, 0.956],
            [0.662, 0.97],
            [0.694, 0.922],
            [0.718, 0.842],
            [0.728, 0.76],
            [0.738, 0.66],
            [0.748, 0.546],
            [0.758, 0.424],
            [0.758, 0.304],
            [0.758, 0.188],
            [0.768, 0.088],
            [0.768, -0.088],
            [0.758, -0.188],
            [0.758, -0.304],
            [0.758, -0.424],
            [0.748, -0.546],
            [0.738, -0.66],
            [0.728, -0.76],
            [0.718, -0.842],
            [0.694, -0.922],
            [0.662, -0.97],
            [0.62, -0.956],
            [0.608, -0.888],
            [0.62, -0.788],
            [0.638, -0.646],
            [0.648, -0.518],
            [0.656, -0.39],
            [0.658, -0.182],
            [0.658, 0.0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.586, 0.0],
            [0.586, 0.128],
            [0.576, 0.216],
            [0.57, 0.324],
            [0.562, 0.424],
            [0.552, 0.518],
            [0.542, 0.62],
            [0.504, 0.654],
            [0.476, 0.654],
            [0.432, 0.654],
            [0.318, 0.654],
            [0.284, 0.754],
            [0.252, 0.782],
            [0.212, 0.794],
            [0.164, 0.754],
            [0.146, 0.686],
            [0.128, 0.612],
            [0.094, 0.612],
            [0.068, 0.708],
            [0.042, 0.68],
            [0.032, 0.586],
            [0.016, 0.506],
            [0.03, 0.35],
            [0.016, 0.188],
            [0.016, -0.188],
            [0.03, -0.35],
            [0.016, -0.506],
            [0.032, -0.586],
            [0.042, -0.68],
            [0.068, -0.708],
            [0.094, -0.612],
            [0.128, -0.612],
            [0.146, -0.686],
            [0.164, -0.754],
            [0.212, -0.794],
            [0.252, -0.782],
            [0.284, -0.754],
            [0.318, -0.654],
            [0.432, -0.654],
            [0.476, -0.654],
            [0.504, -0.654],
            [0.542, -0.62],
            [0.552, -0.518],
            [0.562, -0.424],
            [0.57, -0.324],
            [0.576, -0.216],
            [0.586, -0.128],
            [0.586, 0.0],
          ],
        },
        {
          color: color.tertiary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.462, 0.0],
            [-0.46, 0.128],
            [-0.448, 0.336],
            [-0.438, 0.506],
            [-0.432, 0.64],
            [-0.414, 0.72],
            [-0.046, 0.72],
            [-0.046, 0.626],
            [-0.042, 0.506],
            [-0.03, 0.404],
            [-0.018, 0.304],
            [-0.016, 0.182],
            [-0.016, -0.182],
            [-0.018, -0.304],
            [-0.03, -0.404],
            [-0.042, -0.506],
            [-0.046, -0.626],
            [-0.046, -0.72],
            [-0.414, -0.72],
            [-0.432, -0.64],
            [-0.438, -0.506],
            [-0.448, -0.336],
            [-0.46, -0.128],
            [-0.462, 0.0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.472, 0.0],
            [-0.476, 0.202],
            [-0.486, 0.398],
            [-0.5, 0.566],
            [-0.518, 0.72],
            [-0.548, 0.848],
            [-0.586, 0.91],
            [-0.658, 0.848],
            [-0.686, 0.74],
            [-0.706, 0.566],
            [-0.718, 0.398],
            [-0.728, 0.208],
            [-0.73, 0.08],
            [-0.73, -0.08],
            [-0.728, -0.208],
            [-0.718, -0.398],
            [-0.706, -0.566],
            [-0.686, -0.74],
            [-0.658, -0.848],
            [-0.586, -0.91],
            [-0.548, -0.848],
            [-0.518, -0.72],
            [-0.5, -0.566],
            [-0.486, -0.398],
            [-0.476, -0.202],
            [-0.472, 0.0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.792, 0.0],
            [-0.792, 0.108],
            [-0.792, 0.29],
            [-0.776, 0.424],
            [-0.766, 0.552],
            [-0.744, 0.64],
            [-0.72, 0.68],
            [-0.718, 0.802],
            [-0.776, 0.808],
            [-0.844, 0.788],
            [-0.872, 0.674],
            [-0.89, 0.552],
            [-0.91, 0.43],
            [-0.92, 0.296],
            [-0.92, 0.188],
            [-0.92, 0.08],
            [-0.92, -0.08],
            [-0.92, -0.188],
            [-0.92, -0.296],
            [-0.91, -0.43],
            [-0.89, -0.552],
            [-0.872, -0.674],
            [-0.844, -0.788],
            [-0.776, -0.808],
            [-0.718, -0.802],
            [-0.72, -0.68],
            [-0.744, -0.64],
            [-0.766, -0.552],
            [-0.776, -0.424],
            [-0.792, -0.29],
            [-0.792, -0.108],
            [-0.792, 0.0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.074, 0.0],
            [-0.084, 0.128],
            [-0.108, 0.216],
            [-0.15, 0.236],
            [-0.188, 0.236],
            [-0.366, 0.236],
            [-0.394, 0.208],
            [-0.408, 0.162],
            [-0.418, 0.094],
            [-0.418, -0.094],
            [-0.408, -0.162],
            [-0.394, -0.208],
            [-0.366, -0.236],
            [-0.188, -0.236],
            [-0.15, -0.236],
            [-0.108, -0.216],
            [-0.084, -0.128],
            [-0.074, 0.0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.436, 0.0],
            [0.424, 0.134],
            [0.412, 0.208],
            [0.386, 0.154],
            [0.36, 0.182],
            [0.326, 0.228],
            [0.314, 0.324],
            [0.29, 0.384],
            [0.264, 0.472],
            [0.228, 0.478],
            [0.184, 0.478],
            [0.166, 0.41],
            [0.154, 0.33],
            [0.15, 0.25],
            [0.142, 0.154],
            [0.142, 0.08],
            [0.142, -0.08],
            [0.142, -0.154],
            [0.15, -0.25],
            [0.154, -0.33],
            [0.166, -0.41],
            [0.184, -0.478],
            [0.228, -0.478],
            [0.264, -0.472],
            [0.29, -0.384],
            [0.314, -0.324],
            [0.326, -0.228],
            [0.36, -0.182],
            [0.386, -0.154],
            [0.412, -0.208],
            [0.424, -0.134],
            [0.436, 0.0],
          ],
        },
      ]
    : [];

  const tankerInnerLayout = showInnerVesselLayout
    ? [
        {
          color: color.primary,
          colorOutline: color.primary,
          coordinates: [
            [-0.48, -0.12],
            [-0.44, -0.1],
            [0.9, -0.1],
            [0.9, -0.14],
            [0.98, -0.14],
            [0.98, 0.14],
            [0.9, 0.14],
            [0.9, 0.1],
            [-0.44, 0.1],
            [-0.48, 0.12],
            [-0.48, 0.72],
            [-0.44, 0.72],
            [-0.44, 0.98],
            [-0.56, 0.98],
            [-0.56, 0.72],
            [-0.52, 0.72],
            [-0.52, -0.72],
            [-0.56, -0.72],
            [-0.56, -0.98],
            [-0.44, -0.98],
            [-0.44, -0.72],
            [-0.48, -0.72],
            [-0.48, -0.12],
          ],
        },
        {
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: [
            [-0.68, 0.4],
            [-0.68, 0.8],
            [-0.82, 0.8],
            [-0.82, -0.8],
            [-0.68, -0.8],
            [-0.68, -0.4],
            [-0.64, -0.26],
            [-0.64, 0.26],
            [-0.68, 0.4],
          ],
        },
        {
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: [
            [-0.92, 0.64],
            [-0.92, -0.64],
            [-0.84, -0.64],
            [-0.84, 0.64],
            [-0.92, 0.64],
          ],
        },
      ]
    : [];

  const generalCargoInnerLayout = showInnerVesselLayout
    ? [
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.63, 0.8],
            [-0.78, 0.8],
            [-0.78, -0.8],
            [-0.63, -0.8],
            [-0.63, 0.8],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.16, 0.67],
            [-0.16, -0.67],
            [-0.46, -0.67],
            [-0.46, 0.67],
            [-0.16, 0.67],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.29, 0.67],
            [0.29, -0.67],
            [-0.01, -0.67],
            [-0.01, 0.67],
            [0.29, 0.67],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.74, 0.67],
            [0.74, -0.67],
            [0.44, -0.67],
            [0.44, 0.67],
            [0.74, 0.67],
          ],
        },
        {
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: [
            [-0.61, 0.5],
            [-0.68, 0.5],
            [-0.68, -0.5],
            [-0.61, -0.5],
            [-0.61, 0.5],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.78, 0.6],
            [-0.85, 0.6],
            [-0.85, -0.6],
            [-0.78, -0.6],
            [-0.78, 0.6],
          ],
        },
      ]
    : [];

  const containerVesselInnerLayout = showInnerVesselLayout
    ? [
        {
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: [
            [0.89, 0.2],
            [0.89, -0.2],
            [0.8, -0.2],
            [0.8, 0.2],
            [0.89, 0.2],
          ],
        },
        {
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: [
            [0.74, 0.67],
            [-0.61, 0.67],
            [-0.61, -0.67],
            [0.74, -0.67],
            [0.74, 0.67],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.59, -0.22],
            [0.44, -0.22],
            [0.44, 0.22],
            [0.59, 0.22],
            [0.59, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.29, -0.22],
            [0.14, -0.22],
            [0.14, 0.22],
            [0.29, 0.22],
            [0.29, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.01, -0.22],
            [-0.16, -0.22],
            [-0.16, 0.22],
            [-0.01, 0.22],
            [-0.01, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.31, -0.22],
            [-0.46, -0.22],
            [-0.46, 0.22],
            [-0.31, 0.22],
            [-0.31, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.59, 0.22],
            [0.74, 0.22],
            [0.74, 0.67],
            [0.59, 0.67],
            [0.59, 0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.59, -0.22],
            [0.74, -0.22],
            [0.74, -0.67],
            [0.59, -0.67],
            [0.59, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.44, 0.22],
            [0.44, 0.67],
            [0.29, 0.67],
            [0.29, 0.22],
            [0.44, 0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [0.44, -0.22],
            [0.29, -0.22],
            [0.29, -0.67],
            [0.44, -0.67],
            [0.44, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.01, 0.22],
            [0.14, 0.22],
            [0.14, 0.67],
            [-0.01, 0.67],
            [-0.01, 0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.01, -0.22],
            [0.14, -0.22],
            [0.14, -0.67],
            [-0.01, -0.67],
            [-0.01, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.16, 0.22],
            [-0.31, 0.22],
            [-0.31, 0.67],
            [-0.16, 0.67],
            [-0.16, 0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.16, -0.22],
            [-0.16, -0.67],
            [-0.31, -0.67],
            [-0.31, -0.22],
            [-0.16, -0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.46, 0.22],
            [-0.61, 0.22],
            [-0.61, 0.67],
            [-0.46, 0.67],
            [-0.46, 0.22],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.46, -0.22],
            [-0.61, -0.22],
            [-0.61, -0.67],
            [-0.46, -0.67],
            [-0.46, -0.22],
          ],
        },
        {
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.63, 0.8],
            [-0.78, 0.8],
            [-0.78, -0.8],
            [-0.63, -0.8],
            [-0.63, 0.8],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.61, 0.5],
            [-0.68, 0.5],
            [-0.68, -0.5],
            [-0.61, -0.5],
            [-0.61, 0.5],
          ],
        },
        {
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: [
            [-0.78, 0.6],
            [-0.85, 0.6],
            [-0.85, -0.6],
            [-0.78, -0.6],
            [-0.78, 0.6],
          ],
        },
      ]
    : [];

  const bulkCarrierInnerLayout = showInnerVesselLayout
    ? [
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.708, 0.022],
            [-0.708, 0.651],
            [-0.751, 0.651],
            [-0.751, 0.469],
            [-0.812, 0.469],
            [-0.812, 0.031],
            [-0.812, -0.469],
            [-0.751, -0.469],
            [-0.751, -0.651],
            [-0.708, -0.651],
            [-0.708, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.839, 0.022],
            [-0.839, 0.571],
            [-0.876, 0.571],
            [-0.89, 0.531],
            [-0.89, 0.022],
            [-0.89, -0.531],
            [-0.876, -0.571],
            [-0.839, -0.571],
            [-0.839, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [0.889, 0.022],
            [0.889, 0.146],
            [0.883, 0.146],
            [0.883, 0.89],
            [0.903, 0.865],
            [0.932, 0.793],
            [0.95, 0.722],
            [0.962, 0.663],
            [0.979, 0.545],
            [0.991, 0.399],
            [0.996, 0.32],
            [0.999, 0.272],
            [1, 0.163],
            [1, 0.022],
            [1, -0.163],
            [0.999, -0.272],
            [0.996, -0.32],
            [0.991, -0.399],
            [0.979, -0.545],
            [0.962, -0.663],
            [0.95, -0.722],
            [0.932, -0.793],
            [0.903, -0.865],
            [0.883, -0.89],
            [0.883, -0.146],
            [0.889, -0.146],
            [0.889, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [0.876, 0.022],
            [0.876, 0.363],
            [0.761, 0.364],
            [0.761, 0.022],
            [0.761, -0.364],
            [0.876, -0.363],
            [0.876, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [0.694, 0.022],
            [0.694, 0.468],
            [0.584, 0.468],
            [0.584, 0.022],
            [0.584, -0.468],
            [0.694, -0.468],
            [0.694, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [0.515, 0.022],
            [0.515, 0.464],
            [0.406, 0.464],
            [0.406, 0.022],
            [0.406, -0.464],
            [0.515, -0.464],
            [0.515, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [0.337, 0.022],
            [0.337, 0.465],
            [0.227, 0.465],
            [0.227, 0.022],
            [0.227, -0.465],
            [0.337, -0.465],
            [0.337, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [0.153, 0.022],
            [0.153, 0.466],
            [0.044, 0.466],
            [0.044, 0.022],
            [0.044, -0.466],
            [0.153, -0.466],
            [0.153, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.029, 0.022],
            [-0.029, 0.479],
            [-0.139, 0.479],
            [-0.139, 0.022],
            [-0.139, -0.479],
            [-0.029, -0.479],
            [-0.029, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.207, 0.022],
            [-0.207, 0.468],
            [-0.315, 0.468],
            [-0.315, 0.022],
            [-0.315, -0.468],
            [-0.207, -0.468],
            [-0.207, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.384, 0.022],
            [-0.384, 0.47],
            [-0.492, 0.47],
            [-0.492, 0.022],
            [-0.492, -0.47],
            [-0.384, -0.47],
            [-0.384, 0.022],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.562, 0.022],
            [-0.562, 0.36],
            [-0.671, 0.36],
            [-0.671, 0.022],
            [-0.671, -0.36],
            [-0.562, -0.36],
            [-0.562, 0.022],
          ],
        },
      ]
    : [];

  const roroInnerLayout = showInnerVesselLayout
    ? [
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.313, 0],
            [-0.313, 0.244],
            [-0.337, 0.469],
            [-0.337, 0.529],
            [-0.35, 0.606],
            [-0.35, 1],
            [-0.401, 1],
            [-0.401, 0.582],
            [-0.469, 0.582],
            [-0.469, 0.394],
            [-0.503, 0.394],
            [-0.503, 0.286],
            [-0.47, 0.286],
            [-0.47, 0],
            [-0.47, -0.286],
            [-0.503, -0.286],
            [-0.503, -0.394],
            [-0.469, -0.394],
            [-0.469, -0.582],
            [-0.401, -0.582],
            [-0.401, -1],
            [-0.35, -1],
            [-0.35, -0.606],
            [-0.337, -0.529],
            [-0.337, -0.469],
            [-0.313, -0.244],
            [-0.313, 0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.primary,
          coordinates: [
            [-0.357, 0],
            [-0.357, 0.116],
            [-0.37, 0.227],
            [-0.369, 0.268],
            [-0.359, 0.316],
            [-0.341, 0.17],
            [-0.339, 0.132],
            [-0.339, 0],
            [-0.339, -0.132],
            [-0.341, -0.17],
            [-0.359, -0.316],
            [-0.369, -0.268],
            [-0.37, -0.227],
            [-0.357, -0.116],
            [-0.357, 0],
          ],
        },
      ]
    : [];

  const vessels = {
    CruiseLiner: {
      defaultParams: {
        length: 200,
        width: 40,
        draft: 10,
        hullHeight: 35,
      },
      geometry: [
        {
          isHull: true,
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: hullOverride || [
            [1.0, 0.0],
            [0.988, 0.182],
            [0.954, 0.344],
            [0.92, 0.498],
            [0.886, 0.606],
            [0.842, 0.734],
            [0.79, 0.848],
            [0.738, 0.936],
            [0.686, 1.0],
            [0.624, 1.0],
            [-0.73, 1.0],
            [-0.806, 0.97],
            [-0.858, 0.936],
            [-0.902, 0.868],
            [-0.93, 0.782],
            [-0.962, 0.646],
            [-0.978, 0.498],
            [-0.99, 0.37],
            [-0.998, 0.25],
            [-1.0, 0.122],
            [-1.0, -0.122],
            [-0.998, -0.25],
            [-0.99, -0.37],
            [-0.978, -0.498],
            [-0.962, -0.646],
            [-0.93, -0.782],
            [-0.902, -0.868],
            [-0.858, -0.936],
            [-0.806, -0.97],
            [-0.73, -1.0],
            [0.624, -1.0],
            [0.686, -1.0],
            [0.738, -0.936],
            [0.79, -0.848],
            [0.842, -0.734],
            [0.886, -0.606],
            [0.92, -0.498],
            [0.954, -0.344],
            [0.988, -0.182],
            [1.0, 0.0],
          ],
        },
        ...cruiserLiner,
      ],
    },
    GeneralCargo: {
      defaultParams: {
        length: 200,
        width: 30,
        draft: 10,
        hullHeight: 35,
      },
      geometry: [
        {
          isHull: true,
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: hullOverride || [
            [1.0, 0.0],
            [0.99, 0.15],
            [0.97, 0.31],
            [0.94, 0.42],
            [0.91, 0.51],
            [0.88, 0.6],
            [0.84, 0.69],
            [0.79, 0.78],
            [0.74, 0.85],
            [0.69, 0.9],
            [0.64, 0.96],
            [0.6, 1.0],
            [-0.61, 1.0],
            [-0.67, 0.97],
            [-0.73, 0.92],
            [-0.78, 0.86],
            [-0.84, 0.79],
            [-0.88, 0.73],
            [-0.93, 0.65],
            [-0.96, 0.6],
            [-0.99, 0.53],
            [-0.99, -0.53],
            [-0.96, -0.6],
            [-0.93, -0.65],
            [-0.88, -0.73],
            [-0.84, -0.79],
            [-0.78, -0.86],
            [-0.73, -0.92],
            [-0.67, -0.97],
            [-0.61, -1.0],
            [0.6, -1.0],
            [0.64, -0.96],
            [0.69, -0.9],
            [0.74, -0.85],
            [0.79, -0.78],
            [0.84, -0.69],
            [0.88, -0.6],
            [0.91, -0.51],
            [0.94, -0.42],
            [0.97, -0.31],
            [0.99, -0.15],
            [1.0, 0.0],
          ],
        },
        ...generalCargoInnerLayout,
      ],
    },
    Tanker: {
      defaultParams: {
        length: 200,
        width: 40,
        draft: 10,
        hullHeight: 25,
      },
      geometry: [
        {
          isHull: true,
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: hullOverride || [
            [1.0, 0.0],
            [0.98, 0.3],
            [0.95, 0.58],
            [0.9, 0.74],
            [0.84, 0.88],
            [0.784, 0.96],
            [0.7, 1.0],
            [-0.78, 1.0],
            [-0.87, 0.91],
            [-0.95, 0.78],
            [-0.986, 0.64],
            [-1.0, 0.48],
            [-1.0, -0.48],
            [-0.986, -0.64],
            [-0.95, -0.78],
            [-0.87, -0.91],
            [-0.78, -1.0],
            [0.7, -1.0],
            [0.784, -0.96],
            [0.84, -0.88],
            [0.9, -0.74],
            [0.95, -0.58],
            [0.98, -0.3],
            [1.0, 0.0],
          ],
        },
        ...tankerInnerLayout,
      ],
    },
    Yacht: {
      defaultParams: {
        length: 20,
        width: 5,
        draft: 3,
        hullHeight: 5,
      },
      geometry: [
        {
          isHull: true,
          color: color.primary,
          colorOutline: color.secondary,
          coordinates: hullOverride || [
            [1.0, 0.0],
            [0.958, 0.078],
            [0.886, 0.17],
            [0.806, 0.248],
            [0.71, 0.344],
            [0.6, 0.458],
            [0.46, 0.594],
            [0.346, 0.684],
            [0.236, 0.768],
            [0.142, 0.838],
            [0.06, 0.884],
            [-0.018, 0.92],
            [-0.112, 0.954],
            [-0.198, 0.974],
            [-0.24, 0.988],
            [-0.298, 1.0],
            [-0.39, 0.984],
            [-0.46, 0.97],
            [-0.542, 0.952],
            [-0.62, 0.932],
            [-0.696, 0.904],
            [-0.78, 0.878],
            [-0.852, 0.844],
            [-0.92, 0.802],
            [-0.952, 0.694],
            [-0.968, 0.53],
            [-0.99, 0.406],
            [-1.0, 0.146],
            [-1.0, -0.146],
            [-0.99, -0.406],
            [-0.968, -0.53],
            [-0.952, -0.694],
            [-0.92, -0.802],
            [-0.852, -0.844],
            [-0.78, -0.878],
            [-0.696, -0.904],
            [-0.62, -0.932],
            [-0.542, -0.952],
            [-0.46, -0.97],
            [-0.39, -0.984],
            [-0.298, -1.0],
            [-0.24, -0.988],
            [-0.198, -0.974],
            [-0.112, -0.954],
            [-0.018, -0.92],
            [0.06, -0.884],
            [0.142, -0.838],
            [0.236, -0.768],
            [0.346, -0.684],
            [0.46, -0.594],
            [0.6, -0.458],
            [0.71, -0.344],
            [0.806, -0.248],
            [0.886, -0.17],
            [0.958, -0.078],
            [1.0, 0.0],
          ],
        },
        {
          color: color.secondary,
          colorOutline: color.secondary,
          coordinates: [
            [1.0, 0.0],
            [-0.03, 0.832],
            [-1.0, 0.0],
            [0.26, -0.024],
            [1.0, 0.0],
          ],
        },
        {
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: [
            [0.558, 0.0],
            [0.558, 0.084],
            [0.558, 0.194],
            [0.538, 0.272],
            [0.508, 0.314],
            [0.452, 0.364],
            [0.398, 0.416],
            [0.314, 0.468],
            [0.242, 0.516],
            [0.18, 0.554],
            [0.098, 0.594],
            [0.0, 0.636],
            [-0.102, 0.678],
            [-0.19, 0.704],
            [-0.27, 0.722],
            [-0.37, 0.734],
            [-0.456, 0.734],
            [-0.596, 0.736],
            [-0.696, 0.732],
            [-0.79, 0.732],
            [-0.844, 0.732],
            [-0.914, 0.718],
            [-0.934, 0.58],
            [-0.948, 0.308],
            [-0.954, 0.092],
            [-0.954, -0.092],
            [-0.948, -0.308],
            [-0.934, -0.58],
            [-0.914, -0.718],
            [-0.844, -0.732],
            [-0.79, -0.732],
            [-0.696, -0.732],
            [-0.596, -0.736],
            [-0.456, -0.734],
            [-0.37, -0.734],
            [-0.27, -0.722],
            [-0.19, -0.704],
            [-0.102, -0.678],
            [0.0, -0.636],
            [0.098, -0.594],
            [0.18, -0.554],
            [0.242, -0.516],
            [0.314, -0.468],
            [0.398, -0.416],
            [0.452, -0.364],
            [0.508, -0.314],
            [0.538, -0.272],
            [0.558, -0.194],
            [0.558, -0.084],
            [0.558, 0.0],
          ],
        },
        {
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: [
            [0.508, 0.182],
            [0.414, 0.198],
            [0.414, -0.198],
            [0.508, -0.182],
            [0.508, 0.182],
          ],
        },
      ],
    },
    ContainerVessel: {
      defaultParams: {
        length: 200,
        width: 28,
        draft: 8.6,
        hullHeight: 20,
      },
      geometry: [
        {
          isHull: true,
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: hullOverride || [
            [-1, 0],
            [-1, -0.1],
            [-1, -0.2],
            [-1, -0.3],
            [-1, -0.4],
            [-1, -0.502],
            [-1, -0.603],
            [-1, -0.705],
            [-1, -0.806],
            [-1, -0.806],
            [-1, -0.905],
            [-1, -1],
            [-0.984, -1],
            [-0.969, -1],
            [-0.952, -1],
            [-0.935, -1],
            [-0.922, -1],
            [-0.907, -1],
            [-0.888, -1],
            [-0.869, -1],
            [-0.852, -1],
            [-0.834, -1],
            [-0.817, -1],
            [-0.799, -1],
            [-0.782, -1],
            [-0.764, -1],
            [-0.747, -1],
            [-0.729, -1],
            [-0.711, -1],
            [-0.694, -1],
            [-0.676, -1],
            [-0.659, -1],
            [-0.641, -1],
            [-0.624, -1],
            [-0.606, -1],
            [-0.589, -1],
            [-0.571, -1],
            [-0.554, -1],
            [-0.536, -1],
            [-0.519, -1],
            [-0.503, -1],
            [-0.484, -1],
            [-0.466, -1],
            [-0.448, -1],
            [-0.43, -1],
            [-0.412, -1],
            [-0.395, -1],
            [-0.377, -1],
            [-0.359, -1],
            [-0.342, -1],
            [-0.324, -1],
            [-0.306, -1],
            [-0.289, -1],
            [-0.271, -1],
            [-0.253, -1],
            [-0.235, -1],
            [-0.217, -1],
            [-0.199, -1],
            [-0.181, -1],
            [-0.163, -1],
            [-0.145, -1],
            [-0.127, -1],
            [-0.109, -1],
            [-0.091, -1],
            [-0.075, -1],
            [-0.057, -1],
            [-0.039, -1],
            [-0.021, -1],
            [-0.004, -1],
            [0.013, -1],
            [0.03, -1],
            [0.047, -1],
            [0.065, -1],
            [0.082, -1],
            [0.1, -1],
            [0.117, -1],
            [0.135, -1],
            [0.152, -1],
            [0.169, -1],
            [0.187, -1],
            [0.204, -1],
            [0.222, -1],
            [0.239, -1],
            [0.256, -1],
            [0.274, -1],
            [0.291, -1],
            [0.308, -1],
            [0.326, -1],
            [0.344, -1],
            [0.361, -1],
            [0.378, -1],
            [0.396, -1],
            [0.414, -1],
            [0.431, -1],
            [0.448, -1],
            [0.466, -1],
            [0.483, -1],
            [0.5, -1],
            [0.516, -1],
            [0.532, -1],
            [0.549, -1],
            [0.565, -1],
            [0.581, -1],
            [0.597, -1],
            [0.615, -1],
            [0.629, -1],
            [0.642, -0.998],
            [0.658, -0.994],
            [0.673, -0.986],
            [0.689, -0.976],
            [0.705, -0.962],
            [0.72, -0.946],
            [0.735, -0.929],
            [0.748, -0.911],
            [0.762, -0.892],
            [0.774, -0.872],
            [0.786, -0.851],
            [0.798, -0.83],
            [0.81, -0.807],
            [0.82, -0.786],
            [0.826, -0.773],
            [0.834, -0.756],
            [0.843, -0.735],
            [0.852, -0.715],
            [0.86, -0.693],
            [0.869, -0.67],
            [0.879, -0.645],
            [0.888, -0.619],
            [0.937, -0.483],
            [0.947, -0.457],
            [0.955, -0.43],
            [0.963, -0.403],
            [0.971, -0.375],
            [0.977, -0.343],
            [0.981, -0.316],
            [0.984, -0.291],
            [0.989, -0.25],
            [0.992, -0.208],
            [0.995, -0.167],
            [0.997, -0.126],
            [0.998, -0.084],
            [0.999, -0.041],
            [1, 0],
            [1, 0],
            [0.999, 0.041],
            [0.998, 0.084],
            [0.997, 0.126],
            [0.995, 0.167],
            [0.992, 0.208],
            [0.989, 0.25],
            [0.984, 0.291],
            [0.981, 0.316],
            [0.977, 0.343],
            [0.971, 0.375],
            [0.963, 0.403],
            [0.955, 0.43],
            [0.947, 0.457],
            [0.937, 0.483],
            [0.888, 0.619],
            [0.879, 0.645],
            [0.869, 0.67],
            [0.86, 0.693],
            [0.852, 0.715],
            [0.843, 0.735],
            [0.834, 0.756],
            [0.826, 0.773],
            [0.82, 0.786],
            [0.81, 0.807],
            [0.798, 0.83],
            [0.786, 0.851],
            [0.774, 0.872],
            [0.762, 0.892],
            [0.748, 0.911],
            [0.735, 0.929],
            [0.72, 0.946],
            [0.705, 0.962],
            [0.689, 0.976],
            [0.673, 0.986],
            [0.658, 0.994],
            [0.642, 0.998],
            [0.629, 1],
            [0.615, 1],
            [0.597, 1],
            [0.581, 1],
            [0.565, 1],
            [0.549, 1],
            [0.532, 1],
            [0.516, 1],
            [0.5, 1],
            [0.483, 1],
            [0.466, 1],
            [0.448, 1],
            [0.431, 1],
            [0.414, 1],
            [0.396, 1],
            [0.378, 1],
            [0.361, 1],
            [0.344, 1],
            [0.326, 1],
            [0.308, 1],
            [0.291, 1],
            [0.274, 1],
            [0.256, 1],
            [0.239, 1],
            [0.222, 1],
            [0.204, 1],
            [0.187, 1],
            [0.169, 1],
            [0.152, 1],
            [0.135, 1],
            [0.117, 1],
            [0.1, 1],
            [0.082, 1],
            [0.065, 1],
            [0.047, 1],
            [0.03, 1],
            [0.013, 1],
            [-0.004, 1],
            [-0.021, 1],
            [-0.039, 1],
            [-0.057, 1],
            [-0.075, 1],
            [-0.091, 1],
            [-0.109, 1],
            [-0.127, 1],
            [-0.145, 1],
            [-0.163, 1],
            [-0.181, 1],
            [-0.199, 1],
            [-0.217, 1],
            [-0.235, 1],
            [-0.253, 1],
            [-0.271, 1],
            [-0.289, 1],
            [-0.306, 1],
            [-0.324, 1],
            [-0.342, 1],
            [-0.359, 1],
            [-0.377, 1],
            [-0.395, 1],
            [-0.412, 1],
            [-0.43, 1],
            [-0.448, 1],
            [-0.466, 1],
            [-0.484, 1],
            [-0.503, 1],
            [-0.519, 1],
            [-0.536, 1],
            [-0.554, 1],
            [-0.571, 1],
            [-0.589, 1],
            [-0.606, 1],
            [-0.624, 1],
            [-0.641, 1],
            [-0.659, 1],
            [-0.676, 1],
            [-0.694, 1],
            [-0.711, 1],
            [-0.729, 1],
            [-0.747, 1],
            [-0.764, 1],
            [-0.782, 1],
            [-0.799, 1],
            [-0.817, 1],
            [-0.834, 1],
            [-0.852, 1],
            [-0.869, 1],
            [-0.888, 1],
            [-0.907, 1],
            [-0.922, 1],
            [-0.935, 1],
            [-0.952, 1],
            [-0.969, 1],
            [-0.984, 1],
            [-1, 1],
            [-1, 0.905],
            [-1, 0.806],
            [-1, 0.806],
            [-1, 0.705],
            [-1, 0.603],
            [-1, 0.502],
            [-1, 0.4],
            [-1, 0.3],
            [-1, 0.2],
            [-1, 0.1],
            [-1, 0],
          ],
        },
        ...containerVesselInnerLayout,
      ],
    },
    BulkCarrier: {
      defaultParams: {
        length: 200,
        width: 28,
        draft: 8.6,
        hullHeight: 20,
      },
      geometry: [
        {
          isHull: true,
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: hullOverride || [
            [-1, 0.022],
            [-1, 0.592],
            [-0.956, 0.688],
            [-0.93, 0.742],
            [-0.888, 0.812],
            [-0.842, 0.872],
            [-0.795, 0.919],
            [-0.765, 0.943],
            [-0.727, 0.971],
            [-0.708, 0.981],
            [-0.666, 0.993],
            [-0.555, 1],
            [-0.355, 1],
            [-0.144, 1],
            [0.096, 1],
            [0.671, 0.987],
            [0.699, 0.984],
            [0.729, 0.974],
            [0.77, 0.952],
            [0.798, 0.929],
            [0.826, 0.903],
            [0.859, 0.863],
            [0.892, 0.795],
            [0.918, 0.72],
            [0.937, 0.644],
            [0.962, 0.51],
            [0.976, 0.379],
            [0.982, 0.301],
            [0.987, 0.183],
            [0.989, 0.104],
            [0.989, 0.022],
            [0.989, -0.104],
            [0.987, -0.183],
            [0.982, -0.301],
            [0.976, -0.379],
            [0.962, -0.51],
            [0.937, -0.644],
            [0.918, -0.72],
            [0.892, -0.795],
            [0.859, -0.863],
            [0.826, -0.903],
            [0.798, -0.929],
            [0.77, -0.952],
            [0.729, -0.974],
            [0.699, -0.984],
            [0.671, -0.987],
            [0.096, -1],
            [-0.144, -1],
            [-0.355, -1],
            [-0.555, -1],
            [-0.666, -0.993],
            [-0.708, -0.981],
            [-0.727, -0.971],
            [-0.765, -0.943],
            [-0.795, -0.919],
            [-0.842, -0.872],
            [-0.888, -0.812],
            [-0.93, -0.742],
            [-0.956, -0.688],
            [-1, -0.592],
            [-1, 0.022],
          ],
        },
        ...bulkCarrierInnerLayout,
      ],
    },
    Roro: {
      defaultParams: {
        length: 200,
        width: 28,
        draft: 8.6,
        hullHeight: 20,
      },
      geometry: [
        {
          isHull: true,
          color: color.tertiary,
          colorOutline: color.tertiary,
          coordinates: hullOverride || [
            [-1, 0],
            [-1, 1],
            [0.775, 1],
            [0.816, 0.997],
            [0.84, 0.98],
            [0.866, 0.933],
            [0.889, 0.877],
            [0.913, 0.797],
            [0.944, 0.675],
            [0.966, 0.556],
            [0.974, 0.466],
            [0.984, 0.339],
            [0.994, 0.185],
            [1, 0],
            [0.994, -0.185],
            [0.984, -0.339],
            [0.974, -0.466],
            [0.966, -0.556],
            [0.944, -0.675],
            [0.913, -0.797],
            [0.889, -0.877],
            [0.866, -0.933],
            [0.84, -0.98],
            [0.816, -0.997],
            [0.775, -1],
            [-1, -1],
            [-1, 0],
          ],
        },
        ...roroInnerLayout,
      ],
    },
  };

  return vessels[vesselType];
};

export const shipTypeIdToName = (shipTypeId: number) => {
  if (shipTypeId >= 70 && shipTypeId <= 79) {
    return 'GeneralCargo';
  } else if (shipTypeId >= 80 && shipTypeId <= 89) {
    return 'Tanker';
  } else if (shipTypeId >= 60 && shipTypeId <= 69) {
    return 'CruiseLiner';
  } else if (shipTypeId >= 36 && shipTypeId <= 37) {
    return 'Yacht';
  } else {
    return 'GeneralCargo';
  }
};
